{"version":3,"sources":["../../src/cli/index.js"],"names":["Starters","startCommand","require","pkg","appModeList","runner","main","logger","level","commandName","config","version","cli","argv","_","module","parent","exports"],"mappings":";;;;AAAA,MAAM;AAAEA,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAAZ,IAAiCC,OAAO,CAAC,WAAD,CAA9C;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAkBF,OAAO,CAAC,UAAD,CAA/B;;AAEA,MAAMG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AAEA,SAASI,IAAT,GAAiB;AACbL,EAAAA,YAAY,CAACI,MAAD,EAAS;AACjBE,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KADS;AAIjBC,IAAAA,WAAW,EAAE,WAJI;AAKjBC,IAAAA,MAAM,EAAE;AACJ,iBAAWP,GAAG,CAACQ,OADX;AAEJ,qBAAe;AACX,kBAAW,6CAA4CR,GAAG,CAACQ,OAAQ,EADxD;AAEX,mBAAW,oBAFA;AAGX,qBAAa,CACT;AACI,kBAAQ,eADZ;AAEI,sBAAY,KAFhB;AAGI,qBAAW,IAHf;AAII,2BAAiB;AAJrB,SADS,CAHF;AAWX,mBAAW;AACP,eAAK;AACD,oBAAQ,aADP;AAED,qBAAS,CAAE,QAAF,CAFR;AAGD,oBAAQ,IAHP;AAID,uBAAW;AAJV,WADE;AAOP,eAAK;AACD,oBAAQ,0BADP;AAED,qBAAS,CAAE,SAAF,CAFR;AAGD,oBAAQ,IAHP;AAID,uBAAW;AAJV,WAPE;AAaP,eAAK;AACD,oBAAQ,oCADP;AAED,qBAAS,CAAE,YAAF,CAFR;AAGD,oBAAQ,IAHP;AAID,uBAAW;AAJV,WAbE;AAmBP,eAAK;AACD,oBAAQ,oBADP;AAED,qBAAS,CAAE,MAAF,CAFR;AAGD,oBAAQ,IAHP;AAID,uBAAW;AAJV,WAnBE;AAyBP,eAAK;AACD,oBAAQ,yBADP;AAED,qBAAS,CAAE,MAAF,CAFR;AAGD,iCAAqB,KAHpB;AAID,uBAAW,IAJV;AAKD,wBAAY,IALX;AAMD,0BAAc,MANb;AAOD,6BAAiB,4CAPhB;AAQD,+BAAmBP;AARlB,WAzBE;AAmCP,eAAK;AACD,oBAAQ,kBADP;AAED,qBAAS,CAAE,MAAF,EAAU,UAAV,CAFR;AAGD,uBAAW,IAHV;AAID,wBAAY,IAJX;AAKD,6BAAiB,oCALhB;AAMD,6BAAiBQ,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,CAAT,CAAW,CAAX,CANvB;AAOD,iCAAqBF,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,CAAT,CAAW,CAAX;AAP3B,WAnCE;AA4CP,eAAK;AACD,oBAAQ,aADP;AAED,qBAAS,CAAE,MAAF,EAAU,QAAV;AAFR,WA5CE;AAgDP,kBAAQ;AACJ,oBAAQ,uBADJ;AAEJ,qBAAS,CAAE,cAAF,EAAkB,mBAAlB,CAFL;AAGJ,oBAAQ,IAHJ;AAIJ,uBAAW,IAJP;AAKJ,wBAAY,IALR;AAMJ,6BAAiB,KANb;AAOJ,iCAAqB;AAPjB,WAhDD;AAyDP,0BAAgB;AACZ,oBAAQ,gCADI;AAEZ,qBAAS,CAAE,kBAAF,CAFG;AAGZ,oBAAQ,IAHI;AAIZ,uBAAW,IAJC;AAKZ,wBAAY,IALA;AAMZ,6BAAiB,KANL;AAOZ,iCAAqB;AAPT,WAzDT;AAkEP,oBAAU;AACN,oBAAQ,4BADF;AAEN,oBAAQ,IAFF;AAGN,uBAAW,IAHL;AAIN,6BAAiB,KAJX;AAKN,iCAAqB;AALf;AAlEH,SAXA;AAqFX,sBAAcF,GAAG,IAAKA,GAAG,CAACC,IAAJ,CAAS,GAAT,KAAiBD,GAAG,CAACC,IAAJ,CAAS,GAAT,CAAjB,IAAkCD,GAAG,CAACC,IAAJ,CAAS,GAAT,CAAlC,IAAmDD,GAAG,CAACC,IAAJ,CAAS,GAAT,CArF9D;AAsFX,6BAAqBD,GAAG,IAAKA,GAAG,CAACC,IAAJ,CAAS,GAAT,KAAiBD,GAAG,CAACC,IAAJ,CAAS,GAAT,CAAjB,IAAkCD,GAAG,CAACC,IAAJ,CAAS,GAAT,CAtFpD;AAuFX,4BAAoB,IAvFT;AAwFX,yBAAiB;AAxFN;AAFX;AALS,GAAT,CAAZ;AAmGH;;AAAA;;AAED,IAAI,CAACE,MAAM,CAACC,MAAZ,EAAoB;AAChBV,EAAAA,IAAI;AACP,CAFD,MAEO;AACHS,EAAAA,MAAM,CAACE,OAAP,GAAiBX,IAAjB;AACH","sourcesContent":["const { Starters: { startCommand } } = require('@genx/app');\nconst pkg = require('../../package.json');\nconst { appModeList } = require('../modes');\n\nconst runner = require('../runner');\n\nfunction main () {\n    startCommand(runner, {\n        logger: {\n            level: 'info'\n        },\n        commandName: 'genx-init',\n        config: {\n            \"version\": pkg.version,\n            \"commandLine\": {\n                \"banner\": `Gen-X application initiator command line v${pkg.version}`,\n                \"program\": \"npm init @genx/app\",            \n                \"arguments\": [\n                    { \n                        \"name\": \"app-directory\", \n                        \"required\": false, \n                        \"inquire\": true, \n                        \"promptMessage\": \"Please enter the application directory (usually the app name):\"\n                    }\n                ],  \n                \"options\": {                \n                    \"s\": {\n                        \"desc\": \"Silent mode\",\n                        \"alias\": [ \"silent\" ],\n                        \"bool\": true,\n                        \"default\": false\n                    },            \n                    \"v\": {\n                        \"desc\": \"Show version information\",\n                        \"alias\": [ \"version\" ],\n                        \"bool\": true,\n                        \"default\": false\n                    },\n                    \"l\": {\n                        \"desc\": \"Show a list of available app modes\",\n                        \"alias\": [ \"list-modes\" ],\n                        \"bool\": true,\n                        \"default\": false\n                    },\n                    \"h\": {\n                        \"desc\": \"Show usage message\",\n                        \"alias\": [ \"help\" ],\n                        \"bool\": true,\n                        \"default\": false\n                    },\n                    \"m\": {\n                        \"desc\": \"Target application mode\",\n                        \"alias\": [ \"mode\" ],\n                        \"silentModeDefault\": \"web\",\n                        \"inquire\": true,\n                        \"required\": true,\n                        \"promptType\": \"list\",\n                        \"promptMessage\": \"Please choose the target application mode:\",\n                        \"choicesProvider\": appModeList\n                    },\n                    \"n\": {\n                        \"desc\": \"Application name\",\n                        \"alias\": [ \"name\", \"app-name\" ],                    \n                        \"inquire\": true,\n                        \"required\": true,\n                        \"promptMessage\": \"Please input the application name:\",\n                        \"promptDefault\": cli => cli.argv._[0],\n                        \"silentModeDefault\": cli => cli.argv._[0] \n                    },\n                    \"c\": {\n                        \"desc\": \"Config path\",\n                        \"alias\": [ \"conf\", \"config\" ]\n                    },\n                    \"lock\": {\n                        \"desc\": \"With npm package lock\",\n                        \"alias\": [ \"package-lock\", \"with-package-lock\" ],                    \n                        \"bool\": true,\n                        \"inquire\": true,\n                        \"required\": true,                    \n                        \"promptDefault\": false,\n                        \"silentModeDefault\": false\n                    },                              \n                    \"skip-install\": {\n                        \"desc\": \"Skip dependencies installation\",\n                        \"alias\": [ \"skip-npm-install\" ],                    \n                        \"bool\": true,\n                        \"inquire\": true,\n                        \"required\": true,                    \n                        \"promptDefault\": false,\n                        \"silentModeDefault\": false\n                    },\n                    \"public\": {\n                        \"desc\": \"To publish publicly in npm\",\n                        \"bool\": true,\n                        \"inquire\": true,                        \n                        \"promptDefault\": false,\n                        \"silentModeDefault\": false\n                    }      \n                },\n                \"silentMode\": cli => (cli.argv['s'] || cli.argv['v'] || cli.argv['h'] || cli.argv['l']),\n                \"nonValidationMode\": cli => (cli.argv['v'] || cli.argv['h'] || cli.argv['l']),\n                \"showUsageOnError\": true,\n                \"showArguments\": false\n            }\n        }\n    });\n};\n\nif (!module.parent) {\n    main();\n} else {\n    module.exports = main;\n}"],"file":"index.js"}